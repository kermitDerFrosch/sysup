#!/bin/bash
declare VERSION="1.9b"
declare DIR="$(dirname "$(realpath "$0")")"
declare -A CMDS
declare -A ERROR_MESSAGE
declare -A PARTNAMES

function cleanup() {
  [ -f $LOCKFILE ] && rm -f "$LOCKFILE"
  CLEANED=1
  printDuration
  [ $START -eq 1 ] && sourceFile "post.sh"
}

function onSigInt() {
  START=0
}

function _die() {
  RC=$1
  shift
  [ ${#1} -eq 0 ] || printf "$@\n"
  exit $RC;
}

function sourceFile() {
  if [ "x$DIR" == "x/usr/sbin" ];then
    [ -f "/etc/sysup/$1" ] || return 1
    . "/etc/sysup/$1"
  else
    [ -f "$DIR/$1" ] || return 1
    . "$DIR/$1"
  fi
  return 0
}

sourceFile "sysup.conf" || _die 1 "Config not found"
sourceFile "functions.inc" || _die 1 "functions not found"
sourceFile "phase.conf" || _die 1 "phases not found"

# parse parameters
PARAMS="$@"
while [ "$1x" != "x" ];do
  parseParameter "$1"
  shift
done

# check validity of parameters
checkParameters

# Runcheck
if [ -f "$LOCKFILE" ]; then
  echo "Update is running (PID:`cat $LOCKFILE`)"
  exit 1
fi

# get root if needed
getRoot

declare -i USE_TMUX=0
declare -i FIRSTLOG=1

# open tmux if needed
startTmux

declare -i START=0
declare -A TIMES
declare -A RC
declare -a PARTS
declare -i CLEANED=0

# define destructor and sigint-handler
trap cleanup EXIT
trap onSigInt INT

# write lockfile for runcheck
echo $$ > "$LOCKFILE"

logLine 0 "Gentoo System updater v$VERSION"

# add required parts
configureParts

if [ ! -d "$LOGPATH" ];then
  mkdir "$LOGPATH"
fi

START=1
sourceFile "pre.sh"

# run parts
for PART in ${PARTS[@]}; do
  if [ $CLEANED -eq 1 ] || [ $START -ne 1 ]; then
    break
  fi
  processPart $PART
done
